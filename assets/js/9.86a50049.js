(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{164:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("Debug output is provided by the "),n("a",{attrs:{href:"https://www.npmjs.com/package/debug",target:"_blank",rel:"noopener noreferrer"}},[t._v("debug"),n("OutboundLink")],1),t._v(" module.")]),n("p",[t._v("The supported namespaces are:")]),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),n("p",[t._v("A simple example of this functionality in action would be:")]),t._m(7)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"application-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-logs","aria-hidden":"true"}},[this._v("#")]),this._v(" Application Logs")])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ul",[n("li",[t._v("jagql:handler:search")]),n("li",[t._v("jagql:handler:find")]),n("li",[t._v("jagql:handler:create")]),n("li",[t._v("jagql:handler:delete")]),n("li",[t._v("jagql:handler:update")]),n("li",[t._v("jagql:validation:input")]),n("li",[t._v("jagql:validation:output")]),n("li",[t._v("jagql:include")]),n("li",[t._v("jagql:filter")]),n("li",[t._v("jagql:errors")]),n("li",[t._v("jagql:requestCounter")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("To view the debugging output, provide a comma separated list (or wildcarded via "),a("code",[this._v("*")]),this._v(") of namespaces in the "),a("code",[this._v("DEBUG")]),this._v(" environment variable, for example:")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("$ DEBUG=jagql:handler:find npm test\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("$ DEBUG=jagql:handler:* npm test\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"integration-with-application-logging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integration-with-application-logging","aria-hidden":"true"}},[this._v("#")]),this._v(" Integration with application logging")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("If you wish to integrate "),a("code",[this._v("@jagql/framework")]),this._v(" debug output with your application's logging solution, you can override the functions that are invoked for outputting the messages for the supported namespaces by invoking the package's "),a("code",[this._v("debugging.__overrideDebugOutput(outputFnFactory)")]),this._v(" function where the "),a("code",[this._v("outputFnFactory")]),this._v(" parameter is a function that expects a namespace string parameter and returns an output function for the namespace.")])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" debugging "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"@jagql/framework/lib/debugging"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("outputFnfactory")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("namespace"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("namespace "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('">>>"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndebugging"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("__overrideDebugOutput")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outputFnfactory"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="logging.md";a.default=e.exports}}]);